{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newEndTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "bidAmount",
						"type": "uint256"
					}
				],
				"name": "AuctionExtended",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "winnerBidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "winnerBid",
						"type": "uint256"
					}
				],
				"name": "AuctionFinished",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "NewBid",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "refundAmount",
						"type": "uint256"
					}
				],
				"name": "PartialRefund",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "claimedAmount",
						"type": "uint256"
					}
				],
				"name": "Refund",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "bid",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "claim",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "duration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "endDate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "extension",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "finalize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "finalized",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "gasFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllBids",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "bidder",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							}
						],
						"internalType": "struct Auction.Bid[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTimeLeft",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getWinnerBid",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "bidder",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							}
						],
						"internalType": "struct Auction.Bid",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "increment",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startDate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawRemaining",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Fernando Malaspina",
			"details": "Las reglas de la subasta son las siguientes: - No se admiten pujas inferiores a un 5% mayores a la ultima puja. - El precio base de la subasta es 1 ether. - La duración estipulada es de 1 hora. - El plazo de la subasta se extiende en 10 minutos con cada nueva oferta válida.  Esta regla aplica siempre a partir de 10 minutos antes del plazo original de la subasta.  De esta manera los competidores tienen suficiente tiempo para presentar una nueva oferta si así lo desean.",
			"events": {
				"AuctionExtended(address,uint256,uint256)": {
					"params": {
						"bidAmount": "Valor de la puja",
						"bidder": "Dirección del ofertante",
						"newEndTime": "Nueva fecha de fin de subasta"
					}
				},
				"AuctionFinished(address,uint256)": {
					"params": {
						"winnerBid": "Valor de la puja en wei",
						"winnerBidder": "Dirección del usuario que ganó la subasta"
					}
				},
				"NewBid(address,uint256)": {
					"params": {
						"bidder": "Dirección del usuario que hizo la puja",
						"value": "Valor de la puja en wei"
					}
				},
				"PartialRefund(address,uint256)": {
					"params": {
						"bidder": "Dirección del ofertante",
						"refundAmount": "Valor por sobre la puja menos 2% de gas"
					}
				},
				"Refund(address,uint256)": {
					"params": {
						"bidder": "Dirección del ofertante",
						"claimedAmount": "Valor de la puja menos 2% de gas"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"bid()": {
					"details": "Lanza error si no supera el 5% o si ya es el ofertante ganador"
				},
				"finalize()": {
					"details": "Deberia tener modifier onlyOwner, pero se deja sin para que los profes puedan probar la finalizacion"
				},
				"getAllBids()": {
					"returns": {
						"_0": "Bid[] Una lista de structs con el address del postor y su puja"
					}
				},
				"getTimeLeft()": {
					"returns": {
						"_0": "uint256 timeLeft"
					}
				},
				"getWinnerBid()": {
					"returns": {
						"_0": "Struct Bid con address y valor ofertado"
					}
				}
			},
			"title": "Subasta pública",
			"version": 1
		},
		"userdoc": {
			"events": {
				"AuctionExtended(address,uint256,uint256)": {
					"notice": "Finalización de la subasta extendida."
				},
				"AuctionFinished(address,uint256)": {
					"notice": "Se emite cuando la subasta ha finalizado."
				},
				"NewBid(address,uint256)": {
					"notice": "Se emite cuando se realiza una nueva puja válida."
				},
				"PartialRefund(address,uint256)": {
					"notice": "Reclamos parcial automático (mejora a la propuesta en la consigna)"
				},
				"Refund(address,uint256)": {
					"notice": "Reclamo de fondos"
				}
			},
			"kind": "user",
			"methods": {
				"bid()": {
					"notice": "Permite hacer una nueva puja si cumple las reglas de la subasta"
				},
				"claim()": {
					"notice": "Reclama el dinero ofertado menos 2% de gas"
				},
				"getAllBids()": {
					"notice": "Devuelve todas las pujas realizadas en formato estructurado"
				},
				"getTimeLeft()": {
					"notice": "Devuelve el tiempo hasta finalizar la subasta"
				},
				"getWinnerBid()": {
					"notice": "Devuelve la oferta ganador de la subasta y su puja hasta el momento"
				}
			},
			"notice": "Este contrato permite ofertar en subastas.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Auction.sol": "Auction"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Auction.sol": {
			"keccak256": "0x505ae71c38e7764b07a4e7f1ff36d24cea6e593cc5ce80f074d0bffba6e0e3ee",
			"license": "MIT",
			"urls": [
				"bzz-raw://758487f0c8663cf156a0fa274359b07b4f2845fc3ec52af2edd685693720a229",
				"dweb:/ipfs/QmTnWSNNMYWAhHwQK1TqBG6UJYxKyqiZ7SjkUPi4eJ8c7M"
			]
		}
	},
	"version": 1
}